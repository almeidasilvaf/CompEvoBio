{
  "hash": "7fcfc0c4be0f84ba0e327c2ca79f5321",
  "result": {
    "engine": "knitr",
    "markdown": "\n# Maximum likelihood-based phylogeny inference\n\nIn this chapter, we will use the IQ-TREE [@minh2020iq] program to infer phylogenetic trees \nbased on maximum-likelihood. \nYou can download IQ-TREE [here](https://github.com/iqtree/iqtree2/releases/tag/v2.1.2).\n\nLet's start by loading the required packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\nlibrary(ape)\n\nset.seed(123) # for reproducibility\n```\n:::\n\n\n## Goals of this lesson\n\nTo demonstrate how to use IQ-TREE, we will use an example data set to\nexplore a question that used to be hotly debated years ago:\n\n> Are turtles more closely-related to birds or to crocodiles?\n\nThere are 3 hypotheses to test, and here we will use maximum-likelihood-based\nmethods to find out which one is true:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](phylogeny_inference_ml_files/figure-html/hypotheses-to-test-1.png){width=2400}\n:::\n:::\n\n\nIn this lesson, you will learn to:\n\n- Infer a maximum likelihood tree\n- Apply partition models and choose the best partitioning schemes\n- Perform tree topology tests\n- Identify and remove influential genes\n- Calculate concordance factors\n\n\n## Data description\n\nThe data we will use in this lesson were obtained \nfrom @chiari2012phylogenomic, and they are stored in the `data/` directory \nassociated with this course. The files we will use are:\n\n- `turtle.fa`: a multiple sequence alignment (in FASTA) of a subset of the\ngenes used in the original publication.\n\n- `turtle.nex`: a partition file (in NEXUS) defining a subset of 29 genes. \n\n\n## Inferring a maximum likelihood tree\n\nTo run IQ-TREE, use the command below:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\niqtree2 -s data/turtle.fa -B 1000 -T 2\n```\n:::\n\n\n\n::: {.callout-note collapse=\"true\"}\n\n## Understanding the command-line arguments\n\nThe argument `-s` is mandatory, and this is where you indicate where\nthe file containing the MSA is. In our previous command, \n`iqtree2 -s data/turtle.fa` means *\"run IQ-TREE using the MSA in the file data/turtle.fa\"*. \n\nThe other arguments and their meanings are:\n\n- `-B`: number of replicates for the ultrafast bootstrap \n(see @minh2013ultrafast for details). Here, we used 1000 replicates.\n- `-T`: number of CPU cores to use. Here, we're using 2 cores, because\nIQ-TREE defaults to using all available cores.\n\n\nFor a complete list of arguments and the possible values they take,\nrun `iqtree2 -h`.\n\n:::\n\nThe main IQ-TREE report will be stored in a file ending in `.iqtree`,\nand the maximum likelihood tree (in Newick format) will be stored in a file\nending in `.treefile`.\n\n\n::: {.callout-tip}\n\n## Exercises\n\n1. Look at the report file in `data/turtle.fa.iqtree` and answer the questions \nbelow. Hint: you can use the `readLines()` function to read the output to\nthe R session.\n\n    - What is the best-fit model name?\n    - What are the AIC/AICc/BIC scores of this model and tree?\n\n2. Visualise the tree in `data/turtle.fa.treefile`. What relationship among \nthree trees does this tree support? What is the ultrafast bootstrap \nsupport (%) for the relevant clade?\n\n3. In the figure below, you can see the tree published \nby @chiari2012phylogenomic. Does the inferred tree agree with the \npublished tree?\n\n![Species tree inferred by Chiari *et al*, 2012](chiari_2012_species_tree.png)\n\n\n::: {.callout collapse=\"true\" appearance=\"minimal\"}\n\n### Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read file\nturtle_report <- readLines(here(\"data\", \"turtle.fa.iqtree\"))\n\n# Q1A: Best-fit model\nturtle_report[grepl(\"Best-fit model\", turtle_report)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Best-fit model according to BIC: GTR+F+R3\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Q1B: AIC/AICc/BIC scores for the best model\nturtle_report[grepl(\"^Model  |^GTR\\\\+F\\\\+R3\", turtle_report)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Model                  LogL         AIC      w-AIC        AICc     w-AICc         BIC      w-BIC\"\n[2] \"GTR+F+R3        -116218.179  232518.358 - 0.000395  232518.524 - 0.000398  232844.049 +    0.527\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Q2\ntree <- read.tree(here(\"data\", \"turtle.fa.treefile\"))\nplot(tree, show.node.label = TRUE)\n```\n\n::: {.cell-output-display}\n![](phylogeny_inference_ml_files/figure-html/q1_answer-1.png){width=864}\n:::\n:::\n\n\n:::\n:::\n\n\n## Applying partition models\n\nNow, we will infer a ML tree applying a partition model [@chernomor2016terrace], \nwhich means that each partition (specified in the `turtle.nex` file) will be \nallowed to have its own model.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\niqtree2 -s data/turtle.fa -p data/turtle.nex -B 1000 -T 2\n```\n:::\n\n\n\n::: {.callout-note collapse=\"true\"}\n\n## Understanding the command-line arguments\n\nThe only new argument here is `-p turtle.nex`, which is used to specify\nan *edge-linked proportional* partition model, so that each partition can\nhave shorter or longer tree length (i.e., slower or faster evolutionary rates,\nrespectively).\n:::\n\n\nAs in the simpler IQ-TREE run, the main report is in a file ending in\n`.nex.iqtree`, and the tree is in a file named `.nex.treefile`.\n\n\n::: {.callout-tip}\n\n## Exercises\n\n1. Look at the report file in `data/turtle.nex.iqtree`. What are the \nAIC/AICc/BIC scores of the partition model? Is it better than \nthe previous model?\n\n2. Visualize the tree in `data/turtle.nex.treefile`. \nWhat relationship among three trees does this tree support?\nWhat is the ultrafast bootstrap support (%) for the relevant clade?\n\n3. Does the inferred tree agree with the published \ntree [@chiari2012phylogenomic]?\n\n::: {.callout collapse=\"true\" appearance=\"minimal\"}\n\n### Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Q1 \npart_report <- readLines(here(\"data\", \"turtle.nex.iqtree\"))\npart_report[grepl(\"Best-fit model\", part_report)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Best-fit model according to BIC: K2P+I+G4:ENSGALG00000000223.macse_DNA_gb,K2P+G4:ENSGALG00000001529.macse_DNA_gb,TN+F+G4:ENSGALG00000002002.macse_DNA_gb,TVM+F+I+G4:ENSGALG00000002514.macse_DNA_gb,TIM2e+I+G4:ENSGALG00000003337.macse_DNA_gb,TIM2+F+G4:ENSGALG00000003700.macse_DNA_gb,TN+F+G4:ENSGALG00000003702.macse_DNA_gb,K2P+I+G4:ENSGALG00000003907.macse_DNA_gb,TNe+I:ENSGALG00000005820.macse_DNA_gb,TIM2+F+G4:ENSGALG00000005834.macse_DNA_gb,TNe+G4:ENSGALG00000005902.macse_DNA_gb,TIM3e+G4:ENSGALG00000008338.macse_DNA_gb,TPM2+F+G4:ENSGALG00000008517.macse_DNA_gb,TPM2+F+I+G4:ENSGALG00000008916.macse_DNA_gb,TIM2+F+R3:ENSGALG00000009085.macse_DNA_gb,TN+F+G4:ENSGALG00000009879.macse_DNA_gb,TPM3+F+G4:ENSGALG00000011323.macse_DNA_gb,TIM3e+I+G4:ENSGALG00000011434.macse_DNA_gb,TIM3+F+G4:ENSGALG00000011917.macse_DNA_gb,K2P+G4:ENSGALG00000011966.macse_DNA_gb,SYM+G4:ENSGALG00000012244.macse_DNA_gb,TN+F+G4:ENSGALG00000012379.macse_DNA_gb,TNe+G4:ENSGALG00000012568.macse_DNA_gb,TPM2+F+G4:ENSGALG00000013227.macse_DNA_gb,TN+F+G4:ENSGALG00000014038.macse_DNA_gb,TN+F+G4:ENSGALG00000014648.macse_DNA_gb,TIM+F+G4:ENSGALG00000015326.macse_DNA_gb,TIM2+F+G4:ENSGALG00000015397.macse_DNA_gb,TPM2+F+I+G4:ENSGALG00000016241.macse_DNA_gb\"\n```\n\n\n:::\n\n```{.r .cell-code}\nidx <- grep(\"List of best-fit models\", part_report)\nidx <- seq(idx, idx + 30)\n\npart_report[idx]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"List of best-fit models per partition:\"                                                                   \n [2] \"\"                                                                                                         \n [3] \"  ID  Model                  LogL         AIC      w-AIC        AICc     w-AICc         BIC      w-BIC\"   \n [4] \"   1  K2P+I+G4          -5095.247   10198.494 + 1.42e-316   10198.541 + 5.45e-317   10217.456 + 1.24e-316\"\n [5] \"   2  K2P+G4            -3419.486    6844.972 + 1.42e-316    6845.018 + 5.45e-317    6857.745 + 1.24e-316\"\n [6] \"   3  TN+F+G4           -3609.176    7232.351 + 1.42e-316    7232.520 + 5.45e-317    7263.923 + 1.24e-316\"\n [7] \"   4  TVM+F+I+G4        -4289.021    8598.043 + 1.42e-316    8598.348 + 5.45e-317    8644.001 + 1.24e-316\"\n [8] \"   5  TIM2e+I+G4        -6224.713   12461.426 + 1.42e-316   12461.514 + 5.45e-317   12490.665 + 1.24e-316\"\n [9] \"   6  TIM2+F+G4         -4719.062    9454.125 + 1.42e-316    9454.289 + 5.45e-317    9492.409 + 1.24e-316\"\n[10] \"   7  TN+F+G4           -7633.586   15281.172 + 1.42e-316   15281.244 + 5.45e-317   15318.571 + 1.24e-316\"\n[11] \"   8  K2P+I+G4          -2959.348    5926.696 + 1.42e-316    5926.780 + 5.45e-317    5943.391 + 1.24e-316\"\n[12] \"   9  TNe+I             -3109.902    6227.805 + 1.42e-316    6227.875 + 5.45e-317    6245.229 + 1.24e-316\"\n[13] \"  10  TIM2+F+G4         -3040.697    6097.394 + 1.42e-316    6097.604 + 5.45e-317    6133.757 + 1.24e-316\"\n[14] \"  11  TNe+G4            -2864.568    5737.135 + 1.42e-316    5737.206 + 5.45e-317    5754.518 + 1.24e-316\"\n[15] \"  12  TIM3e+G4          -5169.589   10349.179 + 1.42e-316   10349.255 + 5.45e-317   10372.552 + 1.24e-316\"\n[16] \"  13  TPM2+F+G4         -2702.092    5418.183 + 1.42e-316    5418.394 + 5.45e-317    5448.224 + 1.24e-316\"\n[17] \"  14  TPM2+F+I+G4       -3667.885    7351.771 + 1.42e-316    7352.039 + 5.45e-317    7386.192 + 1.24e-316\"\n[18] \"  15  TIM2+F+R3         -4532.069    9086.138 + 1.42e-316    9086.426 + 5.45e-317    9139.325 + 1.24e-316\"\n[19] \"  16  TN+F+G4           -4173.396    8360.792 + 1.42e-316    8360.982 + 5.45e-317    8391.535 + 1.24e-316\"\n[20] \"  17  TPM3+F+G4         -5262.146   10538.293 + 1.42e-316   10538.418 + 5.45e-317   10571.909 + 1.24e-316\"\n[21] \"  18  TIM3e+I+G4        -3036.049    6084.098 + 1.42e-316    6084.289 + 5.45e-317    6108.713 + 1.24e-316\"\n[22] \"  19  TIM3+F+G4         -4092.671    8201.341 + 1.42e-316    8201.490 + 5.45e-317    8240.450 + 1.24e-316\"\n[23] \"  20  K2P+G4            -2968.726    5943.452 + 1.42e-316    5943.504 + 5.45e-317    5955.897 + 1.24e-316\"\n[24] \"  21  SYM+G4            -4372.436    8758.871 + 1.42e-316    8759.022 + 5.45e-317    8791.240 + 1.24e-316\"\n[25] \"  22  TN+F+G4           -2870.272    5754.543 + 1.42e-316    5754.763 + 5.45e-317    5784.307 + 1.24e-316\"\n[26] \"  23  TNe+G4            -2919.575    5847.149 + 1.42e-316    5847.213 + 5.45e-317    5864.932 + 1.24e-316\"\n[27] \"  24  TPM2+F+G4         -5568.175   11150.350 + 1.42e-316   11150.437 + 5.45e-317   11186.552 + 1.24e-316\"\n[28] \"  25  TN+F+G4           -3315.859    6645.717 + 1.42e-316    6645.920 + 5.45e-317    6676.025 + 1.24e-316\"\n[29] \"  26  TN+F+G4           -2097.847    4209.693 + 1.42e-316    4209.922 + 5.45e-317    4239.168 + 1.24e-316\"\n[30] \"  27  TIM+F+G4          -3743.957    7503.913 + 1.42e-316    7504.158 + 5.45e-317    7539.049 + 1.24e-316\"\n[31] \"  28  TIM2+F+G4         -3634.194    7284.388 + 1.42e-316    7284.634 + 5.45e-317    7319.483 + 1.24e-316\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Q2\ntree <- read.tree(here(\"data\", \"turtle.nex.treefile\"))\nplot(tree, show.node.label = TRUE)\n```\n\n::: {.cell-output-display}\n![](phylogeny_inference_ml_files/figure-html/unnamed-chunk-2-1.png){width=864}\n:::\n:::\n\n\n:::\n:::\n\n\n## Selecting the best partitioning scheme with PartitionFinder\n\nNow, we will use PartitionFinder [@lanfear2012partitionfinder] to merge\npartitions and reduce the potential over-parameterization.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\niqtree2 -s data/turtle.fa -p data/turtle.nex -B 1000 -T 2 -m MFP+MERGE -rcluster 10 --prefix data/turtle.merge\n```\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n\n## Understanding the command-line arguments\n\nBesides the arguments we've already seen, the new arguments and \ntheir meanings are:\n\n- `-m`: specifies the model to use. Here, `MFP+MERGE` indicates running\nPartitionFinder followed by tree reconstruction.\n\n- `-rcluster`: to reduce computations by only examining the top n% (here, 10%)\npartitioning schemes using the \n*relaxed clustering algorithm* [@lanfear2014selecting].\n\n- `--prefix`: specifies the prefix for all output files to avoid overwriting\nthe output of previous runs.\n\n:::\n\nThe main report is a file ending in `.merge.iqtree`, and the tree is in a\nfile ending in `.merge.treefile`.\n\n\n::: {.callout-tip}\n\n## Exercises\n\n1. Look at the report file `data/turtle.merge.iqtree` and answer the questions:\n\n    - How many partitions do we have now?\n    - Look at the AIC/AICc/BIC scores. Compared with two previous models, is this model better or worse?\n    \n2. Visualize the tree in `data/turtle.merge.treefile`. What relationship \namong three trees does this tree support? What is the ultrafast bootstrap \nsupport (%) for the relevant clade?\n\n3. Does this tree agree with the published tree [@chiari2012phylogenomic]?\n\n\n::: {.callout collapse=\"true\" appearance=\"minimal\"}\n\n### Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read report\nmerge_report <- readLines(here(\"data\", \"turtle.merge.iqtree\"))\n\n# Q1A: number of partitions\nmerge_report[grepl(\"Input data:\", merge_report)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Input data: 16 taxa with 7 partitions and 20820 total sites (2.55764% missing data)\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Q1B: compare AIC/AICc/BIC scores\nidx <- grep(\"List of best-fit models per partition\", merge_report)\nidx <- seq(idx, idx + 10)\n\nmerge_report[idx]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"List of best-fit models per partition:\"                                                                   \n [2] \"\"                                                                                                         \n [3] \"  ID  Model                  LogL         AIC      w-AIC        AICc     w-AICc         BIC      w-BIC\"   \n [4] \"   1  TPM3+F+I+G4      -33463.275   66942.550 + 3.38e-316   66942.577 + 5.45e-317   66995.241 + 2.19e-316\"\n [5] \"   2  TIM3+F+I+G4      -28588.305   57194.610 + 3.38e-316   57194.643 + 5.45e-317   57254.076 + 2.19e-316\"\n [6] \"   3  GTR+F+I+G4       -19434.040   38890.081 + 3.38e-316   38890.158 + 5.45e-317   38957.582 + 2.19e-316\"\n [7] \"   4  TIM2e+I+G4        -6224.893   12461.787 + 3.38e-316   12461.874 + 5.45e-317   12491.026 + 2.19e-316\"\n [8] \"   5  TIM2+F+G4        -17553.560   35123.120 + 3.38e-316   35123.156 + 5.45e-317   35173.507 + 2.19e-316\"\n [9] \"   6  TVMe+I+G4         -6727.848   13469.695 + 3.38e-316   13469.809 + 5.45e-317   13504.000 + 2.19e-316\"\n[10] \"   7  TIM+F+G4          -3743.955    7503.910 + 3.38e-316    7504.155 + 5.45e-317    7539.045 + 2.19e-316\"\n[11] \"\"                                                                                                         \n```\n\n\n:::\n\n```{.r .cell-code}\n# Q2\ntree <- read.tree(here(\"data\", \"turtle.merge.treefile\"))\nplot(tree, show.node.label = TRUE)\n```\n\n::: {.cell-output-display}\n![](phylogeny_inference_ml_files/figure-html/unnamed-chunk-4-1.png){width=864}\n:::\n:::\n\n\n:::\n:::\n\n\n## Tree topology tests\n\nTree topology tests can be used to find out if different trees have\nsignificant differences in log-likelihoods. To do that, you can use\nthe SH test [@shimodaira1999multiple] or expected likelihood \nweights [@strimmer2002inferring].\n\n\nBefore running the tests, we first need to concatenate the trees in a single\nfile:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read tree inferred with a single model as plain text\ntree_single <- readLines(here(\"data\", \"turtle.fa.treefile\"))\n\n# Read tree inferred with partition models as plain text\ntree_partitioned <- readLines(here(\"data\", \"turtle.nex.treefile\"))\n\n# Combine trees and export to file\ntree_combined <- c(tree_single, tree_partitioned)\nwriteLines(tree_combined, con = here(\"data\", \"turtle.trees\"))\n```\n:::\n\n\nNow, we can pass the concatenated tree to IQ-TREE:\n\n\n::: {.cell}\n\n```{.bash .cell-code}\niqtree2 -s data/turtle.fa -p data/turtle.merge.best_scheme.nex \\\n    -z data/turtle.trees \\\n    -zb 10000 -au -n 0 \\\n    --prefix data/turtle.test\n```\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n\n## Understanding the command-line arguments\n\nBesides the arguments we've already seen, the new arguments and \ntheir meanings are:\n\n- `-z`: path to the file containing the concatenated trees.\n- `-zb`: number of replicates for *approximate* bootstrap for the tree\ntopology tests (here, 10000).\n- `-au`: perform the Approximately Unbiased test.\n- `-n 0`: avoid tree search and just perform tree topology tests.\n:::\n\n\nThe main report is a file ending in `.test.iqtree`, and the tree is \nin a file ending in `.test.treefile`.\n\nThe KH, SH and AU tests return p-values. Thus, a tree is rejected if \nits p-value <0.05 (marked with a `-` sign).\n\n\n::: {.callout-tip}\n\n## Exercises\n\n1. Look at the \"USER TREES\" section in the report file \n`data/turtle.test.iqtree` and answer the questions:\n\n    - Which tree has the worst log-likelihood?\n    - Can you reject this tree according to the Shimodaira Hasegawa test, \n    assuming a p-value cutoff of 0.05?\n    - Can you reject this tree according to the Approximately Unbiased test, \n    assuming a p-value cutoff of 0.05?\n\n::: {.callout collapse=\"true\" appearance=\"minimal\"}\n\n### Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read report and get the \"USER TREES\" section\ntest_report <- readLines(here(\"data\", \"turtle.test.iqtree\"))\nidx <- grep(\"USER TREES\", test_report)\nidx <- seq(idx, length(test_report))\n\ntest_report[idx]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"USER TREES\"                                                                  \n [2] \"----------\"                                                                  \n [3] \"\"                                                                            \n [4] \"See data/turtle.test.trees for trees with branch lengths.\"                   \n [5] \"\"                                                                            \n [6] \"Tree      logL    deltaL  bp-RELL    p-KH     p-SH       c-ELW       p-AU\"   \n [7] \"-------------------------------------------------------------------------\"   \n [8] \"  1 -115741.0735  4.9507   0.424 +  0.426 +  0.426 +     0.424 +    0.412 + \"\n [9] \"  2 -115736.1228       0   0.576 +  0.574 +      1 +     0.576 +    0.588 + \"\n[10] \"\"                                                                            \n[11] \"deltaL  : logL difference from the maximal logl in the set.\"                 \n[12] \"bp-RELL : bootstrap proportion using RELL method (Kishino et al. 1990).\"     \n[13] \"p-KH    : p-value of one sided Kishino-Hasegawa test (1989).\"                \n[14] \"p-SH    : p-value of Shimodaira-Hasegawa test (2000).\"                       \n[15] \"c-ELW   : Expected Likelihood Weight (Strimmer & Rambaut 2002).\"             \n[16] \"p-AU    : p-value of approximately unbiased (AU) test (Shimodaira, 2002).\"   \n[17] \"\"                                                                            \n[18] \"Plus signs denote the 95% confidence sets.\"                                  \n[19] \"Minus signs denote significant exclusion.\"                                   \n[20] \"All tests performed 10000 resamplings using the RELL method.\"                \n[21] \"\"                                                                            \n[22] \"TIME STAMP\"                                                                  \n[23] \"----------\"                                                                  \n[24] \"\"                                                                            \n[25] \"Date and time: Wed Apr 12 10:10:34 2023\"                                     \n[26] \"Total CPU time used: 6.99 seconds (0h:0m:6s)\"                                \n[27] \"Total wall-clock time used: 17 seconds (0h:0m:17s)\"                          \n[28] \"\"                                                                            \n```\n\n\n:::\n:::\n\n\n:::\n\n:::\n\n\n## Concordance factors\n\nIn previous analyses, we were assuming that gene trees and species tree\nare the same. However, in empirical data, gene trees are often different\nfrom species trees, which we call *discordance*. Now, we will infer different\ngene trees for each partition separately, and then quantify the concordance\nbetween gene trees and species tree with **concordance factors**.\n\nFirst, let's infer one gene tree for each partition.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\niqtree2 -s data/turtle.fa -S data/turtle.nex --prefix data/turtle.loci -T 2\n```\n:::\n\n\nNow, we can calculate concordance factors using the list of trees in file\n`turtle.loci.treefile`. \n\n\n::: {.cell}\n\n```{.bash .cell-code}\niqtree2 -t data/turtle.nex.treefile \\\n    --gcf data/turtle.loci.treefile \\\n    -s data/turtle.fa \\\n    --scf 100\n```\n:::\n\n\nThe code below calculates two kinds of concordance factors:\n\n- **Gene concordance factor (gCF):** percentage of *decisive* gene trees \nconcordant with a particular branch of the species tree (0% <= gCF(b) <= 100%).\n- **Site concordance factor (sCF):** percentage of *decisive* alignment sites \nsupporting a particular branch of the species tree (~33% <= sCF(b) <= 100%). \nsCF <33% means that another discordant branch b’ is more supported, \nwhereas sCF=100% means that branch b is supported by all sites.\n\n\n::: {.callout-tip}\n\n## Exercises\n\n1. Visualize the tree in `data/turtle.nex.treefile.cf.tree`. How do gCF and\nsCF look compared with bootstrap support values?\n\n2. **Challenge:** read concordance factors stats in \nfile `data/turtle.nex.treefile.cf.stat` and create a scatterplot \nusing {ggplot2} showing gCF in the x-axis, sCF in the y-axis, and points\ncolored by bootstrap support values. What do you conclude?\n\n::: {.callout collapse=\"true\" appearance=\"minimal\"}\n\n### Solution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Q1\ntree <- read.tree(here(\"data\", \"turtle.nex.treefile.cf.tree\"))\nplot(tree, show.node.label = TRUE)\n```\n\n::: {.cell-output-display}\n![](phylogeny_inference_ml_files/figure-html/unnamed-chunk-10-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# Q2\ncf_stats <- read.table(\n    here(\"data\", \"turtle.nex.treefile.cf.stat\"), header = TRUE\n)\n\n# Q2\nlibrary(ggplot2)\nggplot(cf_stats, aes(x = gCF, y = sCF, color = Label)) +\n    geom_point(size = 3) +\n    scale_color_viridis_c(direction = -1) +\n    xlim(0, 100) + \n    ylim(0, 100) +\n    geom_abline(slope = 1, intercept = 0, linetype = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](phylogeny_inference_ml_files/figure-html/unnamed-chunk-10-2.png){width=960}\n:::\n:::\n\n\n:::\n:::\n\n\n\n\n## References {.unnumbered}\n\n",
    "supporting": [
      "phylogeny_inference_ml_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}